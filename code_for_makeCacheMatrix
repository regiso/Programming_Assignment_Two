#programming assignment 2

# this code will set and get the value of a square matrix
# it also will get and set the value of the inverse the square matrix

makeCacheMatrix <- function(x=matrix()) {
	m<-NULL						#the m matrix is initialized to empty
	set <- function(y) {				#this defines set as a function of y
		x <<- y					#x is set as equal to y in the cache space
		m <<-	NULL					#m is set to null in the cache space
	}
	get <- function() x				#get is defined as a function that returns x
	setsolve <- function(solve) m<<-solve	#setsolve creates a null solve matrix
	getsolve <- function() m			#getsolve is a function that returns m
	list(set=set, get=get, 				#creates list of the solutions
		setsolve=setsolve,
		getsolve=getsolve)
}

 
#this code checks to see if the matrix has been inverted
#if inverted already it pulls it from the cache
#otherwise it calculates the inverse and saves it

cacheSolve <- function(x=matrix(),..){				
	m <- getsolve()					#m links to the cached solve matrix
	if(!is.null(m)) {					#if it is not null then it will got to cache to get m
		message("getting cached data")
		return (m)
	}
	data <- get()					#if m is NULL then it fills data with x
	m <- solve(data)					#then m is filled with the solve of x
	setsolve(m)						#then it puts this into cache space for solve
	m							#returns m as the solve of x
}
